## Read more about GitHub actions at
## https://www.tidyverse.org/blog/2020/04/usethis-1-6-0/
## which will lead you to
## https://github.com/r-lib/actions/tree/master/examples.
## Also check the reference manual at
## https://help.github.com/en/actions
## I also found this work in progress book
## https://ropenscilabs.github.io/actions_sandbox/
## as well as these two other GitHub actions config files
## https://github.com/seandavi/BiocActions/blob/master/.github/workflows/main.yml
## https://github.com/csoneson/dreval/blob/master/.github/workflows/R-CMD-check.yaml
## See also this blog post
## https://seandavi.github.io/post/learning-github-actions/

on:
  push:
    branches:
      - master
      - 'RELEASE_*'
  pull_request:
    branches:
      - master
      - 'RELEASE_*'

name: R-CMD-check-bioc

jobs:
  define-docker-info:
    runs-on: ubuntu-latest
    outputs:
      imagename: ${{ steps.findinfo.outputs.imagename }}
      biocversion: ${{ steps.findinfo.outputs.biocversion }}
    steps:
      - id: findinfo
        run: |
          ## Find what branch we are working on
          if echo "$GITHUB_REF" | grep -q "master"; then
              biocversion="devel"
          elif echo "$GITHUB_REF" | grep -q "RELEASE_"; then
              biocversion="$(basename -- $GITHUB_REF | tr '[:upper:]' '[:lower:]')"
          fi
          ## Define the image name and print the info
          imagename="bioconductor/bioconductor_docker:${biocversion}"
          echo $imagename
          echo $biocversion

          ## Save the info for the next job
          echo "::set-output name=imagename::${imagename}"
          echo "::set-output name=biocversion::${biocversion}"
  R-CMD-check-bioc:
    runs-on: ${{ matrix.config.os }}
    needs: define-docker-info

    name: ${{ matrix.config.os }} (r-${{ matrix.config.r}} bioc-${{ needs.define-docker-info.outputs.biocversion }})

    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: ubuntu-latest, r: 'biocdocker' }
          # ## Un-comment in case you also want to run other versions, though see container below
          # - {os: windows-latest, r: 'release'}
          # - {os: macOS-latest, r: 'release'}
          # - {os: macOS-latest, r: 'devel'}
          # - {os: ubuntu-16.04, r: 'release', rspm: "https://demo.rstudiopm.com/all/__linux__/xenial/latest"}

    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      # ## I'm not sure if I'll need the RSPM later
      # RSPM: ${{ matrix.config.rspm }}
      CI: true
      TZ: UTZ
      NOT_CRAN: true

    ## I haven't figured out a way to disable containers since you can't use if here
    ## Maybe there's a hint at https://github.community/t5/GitHub-Actions/Conditional-Expression-Syntax/td-p/45176
    ## (like doing all the docker loading and unloading yourself)
    container:
      image: ${{ needs.define-docker-info.outputs.imagename }}
      volumes:
        - /home/runner/work/_temp/Library:/usr/local/lib/R/host-site-library

    steps:
      - uses: actions/checkout@v2

      - name: Setup R from r-lib
        if: matrix.config.r != 'biocdocker'
        uses: r-lib/actions/setup-r@master
        with:
          r-version: ${{ matrix.config.r }}

      - name: Setup pandoc from r-lib
        if: matrix.config.r != 'biocdocker'
        uses: r-lib/actions/setup-pandoc@master

      - id: r_lib_var
        run: |
          R_LIBS_USER=$(Rscript -e "cat(.libPaths()[1])")
          if [[ "${R_LIBS_USER}" == "/usr/local/lib/R/host-site-library" ]]; then
              ## Back up the shared volume when using biocdocker
              R_LIBS_USER="/home/runner/work/_temp/Library"
          fi
          echo ${R_LIBS_USER}
          echo "::set-output name=R_LIBS_USER::${R_LIBS_USER}"

      - name: Query dependencies
        run: |
          install.packages('remotes')
          saveRDS(remotes::dev_package_deps(dependencies = TRUE), ".github/depends.Rds", version = 2)
        shell: Rscript {0}

      - name: Cache R packages
        if: runner.os == 'Linux'
        uses: actions/cache@v1
        with:
          path: ${{ steps.r_lib_var.outputs.R_LIBS_USER }}
          key: ${{ runner.os }}-r-${{ matrix.config.r}}-bioc-${{ needs.define-docker-info.outputs.biocversion }}-${{ hashFiles('.github/depends.Rds') }}
          restore-keys: ${{ runner.os }}-r-${{ matrix.config.r}}-bioc-${{ needs.define-docker-info.outputs.biocversion }}-

      - name: Install system dependencies
        if: runner.os == 'Linux'
        env:
          RHUB_PLATFORM: linux-x86_64-ubuntu-gcc
        run: |
          Rscript -e "remotes::install_github('r-hub/sysreqs')"
          sysreqs=$(Rscript -e "cat(sysreqs::sysreq_commands('DESCRIPTION'))")
          sudo -s eval "$sysreqs"

      - name: Install dependencies
        run: |
          ## Do not use the first library when running on biocdocker
          ## Since BiocCheck fails to load later otherwise.
          libs <- .libPaths()
          use_lib <- ifelse(length(libs) > 1, libs[2], libs[1])
          message(paste(Sys.time(), 'using', use_lib,
              'for BiocManager & BiocCheck'))
          if (!requireNamespace("BiocManager", quietly = TRUE))
              install.packages("BiocManager", lib = use_lib)
          BiocManager::install('BiocCheck', lib = use_lib)

          ## The rest of the dependencies will be installed in the
          ## shared volume with the host ubuntu when using biocdocker which
          ## should enable caching these packages.
          remotes::install_deps(dependencies = TRUE)
          if (!requireNamespace("rcmdcheck", quietly = TRUE))
              remotes::install_cran("rcmdcheck")
        shell: Rscript {0}

      - name: Check
        env:
          _R_CHECK_CRAN_INCOMING_REMOTE_: false
        run: |
          rcmdcheck::rcmdcheck(
              args = c("--no-build-vignettes", "--no-manual", "--timings"),
              build_args = c("--no-manual", "--no-resave-data"),
              error_on = "warning",
              check_dir = "check"
          )
        shell: Rscript {0}

      - name: BiocCheck
        run: |
          R CMD BiocCheck --no-check-R-ver --no-check-bioc-help check/*.tar.gz
        ## For more options check http://bioconductor.org/packages/release/bioc/vignettes/BiocCheck/inst/doc/BiocCheck.html

      - name: Install covr and pkgdown
        if: github.ref == 'refs/heads/master'
        run: |
          if (!requireNamespace("covr", quietly = TRUE))
              remotes::install_cran("covr")
          if (!requireNamespace("pkgdown", quietly = TRUE))
              remotes::install_dev("pkgdown")
        shell: Rscript {0}

      - name: Install package
        if: github.ref == 'refs/heads/master'
        run: R CMD INSTALL .

      - name: Deploy package
        if: github.ref == 'refs/heads/master'
        run: |
          pkgdown::deploy_to_branch(new_process = FALSE)
        shell: Rscript {0}

      - name: Test coverage
        if: github.ref == 'refs/heads/master'
        run: |
          covr::codecov()
        shell: Rscript {0}

      - name: Upload check results
        if: failure()
        uses: actions/upload-artifact@master
        with:
          name: ${{ runner.os }}-r-${{ matrix.config.r}}-bioc-${{ needs.define-docker-info.outputs.biocversion }}-results
          path: check
